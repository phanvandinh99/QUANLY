@using OnlineTesting.Models
@{
    Layout = null;
    Student st = new Student();
    if (Session["user"] == null)
    {
        Response.Redirect("~/OT/Login");
    }
    else
    {
        st = (Student)Session["user"];
    }
    string thongbao = "";
    if (Session["ketqua"] != null)
    {
        thongbao = Session["ketqua"].ToString();
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <title>Index</title>

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial;
            background: linear-gradient(120deg,#2980b9,#8e44ad);
            height: 100vh;
            overflow: hidden;
        }

        .mission {
            position: absolute;
            top: 400px;
            left: 760px;
            transform: translate(-50%, -50%);
            width: 1400px;
            height: 520px;
            background: white;
            border-radius: 25px;
            background-color: #f2f2f2;
            padding: 20px;
        }

        .logout {
            position: absolute;
            top: 10%;
            left: 90%;
            transform: translate(-50%, -50%);
            width: 200px;
            background: none;
            border-radius: 10px;
        }

        .homebutton {
            position: absolute;
            top: 170px;
            left: 80px;
            width: 300px;
            height: 150px;
        }

        .welcome {
            position: absolute;
            top: 10%;
            left: 20%;
            transform: translate(-50%, -50%);
            width: 450px;
            background: none;
            border-radius: 10px;
            padding: 10px 10px 10px 10px;
            color: #b6e7fa;
            border: inherit 1px solid black;
            text-align: center;
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
        }

        h3 {
            padding-top: 0.2em;
            font-family: Impact;
            text-align: center;
            color: #2788b8;
        }

        h2 {
            text-shadow: 2px 0 0 #152d89, -2px 0 0 #152d89, 0 2px 0 #152d89, 0 -2px 0 #152d89, 1px 1px #152d89, -1px -1px 0 #152d89, 1px -1px 0 #152d89, -1px 1px 0 #152d89;
        }

        input[type="button"] {
            transition: ease-out 0.2s;
            border: 1px solid;
            background: #2691d9;
            border-radius: 25px;
            color: #e9f4fb;
            outline: none;
            position: center;
        }

        input[type="button"]:hover {
            box-shadow: inset 400px 0 0 0 #9b59b6;
            cursor: pointer;
        }

        input[name="view_test"] {
            width: 100%;
            background: #4CAF50;
        }
        input[name="view_test"]:hover {
            box-shadow: inset 400px 0 0 0 #45a049;
        }

        input[name="button_Home"] {
            background-color: #bb3333;
        }

        input[name="button_Home"]:hover {
            box-shadow: inset 400px 0 0 0 #880000;
            cursor: pointer;
        }

        

        input[name="button_logout"] {
            font-weight: 800;
            font-size: 18px;
            width: 60%;
            height: 50px;
        }

        .brmedium {
            display: block;
            margin-bottom: 1em;
        }

        h4 {
            font-size: 14px;
            color: red;
            padding: 5px 0 5px 15px;
        }

        select {
            width: 100px;
            height: 30px;
        }

        #testdetail {
            font-family: Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

            #testdetail td, #testdetail th {
                border: 1px solid #ddd;
                padding: 8px;
            }

            #testdetail tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            #testdetail tr:hover {
                background-color: #b6e7fa;
            }

            #testdetail th {
                position: sticky;
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #2788b8;
                color: white;
                top: 0px;
            }

        .wrapper-table {
            max-height: 400px;
            overflow-y: scroll;
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <div class="logout">
        <input name="button_logout" type="button" onclick="location.href='@Url.Action("Logout", "Student")'" value="Logout" />
    </div>
    <div class="welcome">
        <h2>Welcome to Online Testing!</h2>
    </div>

    <div class="mission" id="mission_div">
        <h3>Your History</h3>
        <span class="brmedium"></span>
        <div class="wrapper-table">
            <table id="testdetail">
                <thead>
                    <tr>
                        <th>Test History ID</th>
                        <th>Classroom</th>
                        <th>Subject</th>
                        <th>Teacher</th>
                        <th>Test Description</th>
                        <th>Time Start (m-d-y time)</th>
                        <th>Time End (m-d-y time)</th>
                        <th>Number of Question</th>
                        <th><i class="fa fa-clock-o"></i> (min) </th>
                        <th>Score</th>
                        <th>View</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Test_History i in BLL.Instance.TakeTestHistoryByStudentID(st.Student_ID))
                    {
                        <tr>
                            <td>@i.Test_History_ID</td>
                            <td>@i.Class_H_Name</td>
                            <td>@i.Subject_H_Name</td>
                            <td>@i.Teacher_H_Name</td>
                            <td>@i.Test_H_Description</td>
                            <td>@i.Test_H_timeStart</td>
                            <td>@i.Test_H_timeFinish</td>
                            <td>@BLL.Instance.TakeNumberOfQuestionInTestHistory(i.Test_History_ID)</td>
                            <td>@i.Test_H_Duration</td>
                            @{ 
                                int point = BLL.Instance.GetScoreFromTestHistory_ID(i.Test_History_ID);
                                int numofquest = BLL.Instance.TakeNumberOfQuestionInTestHistory(i.Test_History_ID);
                                string score = point.ToString() + "/" + numofquest.ToString();
                                <td>@score</td>
                            }
                            <td>
                                <input type="button" name="view_test" value="view" onclick="location.href='@Url.Action("HistoryDetail", "Student", new {id = i.Test_History_ID})'"/>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <br />
    </div>
    <div class="homebutton">
        <input name="button_Home" type="button" onclick="location.href='@Url.Action("Index", "Student")'" value="Home" />
    </div>
</body>
</html>

